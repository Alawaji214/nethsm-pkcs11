/*
 * NitroHSM
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// User struct for User
type User struct {
	Realname string `json:"realname"`
	Role UserRole `json:"role"`
	Passphrase string `json:"passphrase"`
}

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser(realname string, role UserRole, passphrase string, ) *User {
	this := User{}
	this.Realname = realname
	this.Role = role
	this.Passphrase = passphrase
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetRealname returns the Realname field value
func (o *User) GetRealname() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Realname
}

// GetRealnameOk returns a tuple with the Realname field value
// and a boolean to check if the value has been set.
func (o *User) GetRealnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Realname, true
}

// SetRealname sets field value
func (o *User) SetRealname(v string) {
	o.Realname = v
}

// GetRole returns the Role field value
func (o *User) GetRole() UserRole {
	if o == nil  {
		var ret UserRole
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *User) GetRoleOk() (*UserRole, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *User) SetRole(v UserRole) {
	o.Role = v
}

// GetPassphrase returns the Passphrase field value
func (o *User) GetPassphrase() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value
// and a boolean to check if the value has been set.
func (o *User) GetPassphraseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Passphrase, true
}

// SetPassphrase sets field value
func (o *User) SetPassphrase(v string) {
	o.Passphrase = v
}

func (o User) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["realname"] = o.Realname
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["passphrase"] = o.Passphrase
	}
	return json.Marshal(toSerialize)
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}

func (v NullableUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


