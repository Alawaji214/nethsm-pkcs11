/*
 * NitroHSM
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PublicKeyKey struct for PublicKeyKey
type PublicKeyKey struct {
	Modulus *string `json:"modulus,omitempty"`
	PublicExponent *string `json:"publicExponent,omitempty"`
	Data *string `json:"data,omitempty"`
}

// NewPublicKeyKey instantiates a new PublicKeyKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicKeyKey() *PublicKeyKey {
	this := PublicKeyKey{}
	return &this
}

// NewPublicKeyKeyWithDefaults instantiates a new PublicKeyKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicKeyKeyWithDefaults() *PublicKeyKey {
	this := PublicKeyKey{}
	return &this
}

// GetModulus returns the Modulus field value if set, zero value otherwise.
func (o *PublicKeyKey) GetModulus() string {
	if o == nil || o.Modulus == nil {
		var ret string
		return ret
	}
	return *o.Modulus
}

// GetModulusOk returns a tuple with the Modulus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyKey) GetModulusOk() (*string, bool) {
	if o == nil || o.Modulus == nil {
		return nil, false
	}
	return o.Modulus, true
}

// HasModulus returns a boolean if a field has been set.
func (o *PublicKeyKey) HasModulus() bool {
	if o != nil && o.Modulus != nil {
		return true
	}

	return false
}

// SetModulus gets a reference to the given string and assigns it to the Modulus field.
func (o *PublicKeyKey) SetModulus(v string) {
	o.Modulus = &v
}

// GetPublicExponent returns the PublicExponent field value if set, zero value otherwise.
func (o *PublicKeyKey) GetPublicExponent() string {
	if o == nil || o.PublicExponent == nil {
		var ret string
		return ret
	}
	return *o.PublicExponent
}

// GetPublicExponentOk returns a tuple with the PublicExponent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyKey) GetPublicExponentOk() (*string, bool) {
	if o == nil || o.PublicExponent == nil {
		return nil, false
	}
	return o.PublicExponent, true
}

// HasPublicExponent returns a boolean if a field has been set.
func (o *PublicKeyKey) HasPublicExponent() bool {
	if o != nil && o.PublicExponent != nil {
		return true
	}

	return false
}

// SetPublicExponent gets a reference to the given string and assigns it to the PublicExponent field.
func (o *PublicKeyKey) SetPublicExponent(v string) {
	o.PublicExponent = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PublicKeyKey) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyKey) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PublicKeyKey) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *PublicKeyKey) SetData(v string) {
	o.Data = &v
}

func (o PublicKeyKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Modulus != nil {
		toSerialize["modulus"] = o.Modulus
	}
	if o.PublicExponent != nil {
		toSerialize["publicExponent"] = o.PublicExponent
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullablePublicKeyKey struct {
	value *PublicKeyKey
	isSet bool
}

func (v NullablePublicKeyKey) Get() *PublicKeyKey {
	return v.value
}

func (v *NullablePublicKeyKey) Set(val *PublicKeyKey) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicKeyKey) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicKeyKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicKeyKey(val *PublicKeyKey) *NullablePublicKeyKey {
	return &NullablePublicKeyKey{value: val, isSet: true}
}

func (v NullablePublicKeyKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicKeyKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


