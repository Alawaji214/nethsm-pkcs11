/*
 * NitroHSM
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject4 struct for InlineObject4
type InlineObject4 struct {
	Mode string `json:"mode"`
	Encrypted string `json:"encrypted"`
}

// NewInlineObject4 instantiates a new InlineObject4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject4(mode string, encrypted string, ) *InlineObject4 {
	this := InlineObject4{}
	this.Mode = mode
	this.Encrypted = encrypted
	return &this
}

// NewInlineObject4WithDefaults instantiates a new InlineObject4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject4WithDefaults() *InlineObject4 {
	this := InlineObject4{}
	return &this
}

// GetMode returns the Mode field value
func (o *InlineObject4) GetMode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *InlineObject4) GetModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *InlineObject4) SetMode(v string) {
	o.Mode = v
}

// GetEncrypted returns the Encrypted field value
func (o *InlineObject4) GetEncrypted() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Encrypted
}

// GetEncryptedOk returns a tuple with the Encrypted field value
// and a boolean to check if the value has been set.
func (o *InlineObject4) GetEncryptedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Encrypted, true
}

// SetEncrypted sets field value
func (o *InlineObject4) SetEncrypted(v string) {
	o.Encrypted = v
}

func (o InlineObject4) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mode"] = o.Mode
	}
	if true {
		toSerialize["encrypted"] = o.Encrypted
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject4 struct {
	value *InlineObject4
	isSet bool
}

func (v NullableInlineObject4) Get() *InlineObject4 {
	return v.value
}

func (v *NullableInlineObject4) Set(val *InlineObject4) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject4) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject4(val *InlineObject4) *NullableInlineObject4 {
	return &NullableInlineObject4{value: val, isSet: true}
}

func (v NullableInlineObject4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


