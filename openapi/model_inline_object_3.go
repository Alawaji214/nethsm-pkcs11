/*
 * NitroHSM
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject3 struct for InlineObject3
type InlineObject3 struct {
	Purpose KeyPurpose `json:"purpose"`
	Algorithm KeyAlgorithm `json:"algorithm"`
	Length *string `json:"length,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewInlineObject3 instantiates a new InlineObject3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject3(purpose KeyPurpose, algorithm KeyAlgorithm, ) *InlineObject3 {
	this := InlineObject3{}
	this.Purpose = purpose
	this.Algorithm = algorithm
	return &this
}

// NewInlineObject3WithDefaults instantiates a new InlineObject3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject3WithDefaults() *InlineObject3 {
	this := InlineObject3{}
	return &this
}

// GetPurpose returns the Purpose field value
func (o *InlineObject3) GetPurpose() KeyPurpose {
	if o == nil  {
		var ret KeyPurpose
		return ret
	}

	return o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value
// and a boolean to check if the value has been set.
func (o *InlineObject3) GetPurposeOk() (*KeyPurpose, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Purpose, true
}

// SetPurpose sets field value
func (o *InlineObject3) SetPurpose(v KeyPurpose) {
	o.Purpose = v
}

// GetAlgorithm returns the Algorithm field value
func (o *InlineObject3) GetAlgorithm() KeyAlgorithm {
	if o == nil  {
		var ret KeyAlgorithm
		return ret
	}

	return o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value
// and a boolean to check if the value has been set.
func (o *InlineObject3) GetAlgorithmOk() (*KeyAlgorithm, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Algorithm, true
}

// SetAlgorithm sets field value
func (o *InlineObject3) SetAlgorithm(v KeyAlgorithm) {
	o.Algorithm = v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *InlineObject3) GetLength() string {
	if o == nil || o.Length == nil {
		var ret string
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject3) GetLengthOk() (*string, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *InlineObject3) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given string and assigns it to the Length field.
func (o *InlineObject3) SetLength(v string) {
	o.Length = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineObject3) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject3) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineObject3) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineObject3) SetId(v string) {
	o.Id = &v
}

func (o InlineObject3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["purpose"] = o.Purpose
	}
	if true {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject3 struct {
	value *InlineObject3
	isSet bool
}

func (v NullableInlineObject3) Get() *InlineObject3 {
	return v.value
}

func (v *NullableInlineObject3) Set(val *InlineObject3) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject3) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject3(val *InlineObject3) *NullableInlineObject3 {
	return &NullableInlineObject3{value: val, isSet: true}
}

func (v NullableInlineObject3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


