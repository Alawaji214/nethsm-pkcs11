/*
 * NitroHSM
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PrivateKeyKey struct for PrivateKeyKey
type PrivateKeyKey struct {
	PrimeP *string `json:"primeP,omitempty"`
	PrimeQ *string `json:"primeQ,omitempty"`
	PublicExponent *string `json:"publicExponent,omitempty"`
	Data *string `json:"data,omitempty"`
}

// NewPrivateKeyKey instantiates a new PrivateKeyKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateKeyKey() *PrivateKeyKey {
	this := PrivateKeyKey{}
	return &this
}

// NewPrivateKeyKeyWithDefaults instantiates a new PrivateKeyKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateKeyKeyWithDefaults() *PrivateKeyKey {
	this := PrivateKeyKey{}
	return &this
}

// GetPrimeP returns the PrimeP field value if set, zero value otherwise.
func (o *PrivateKeyKey) GetPrimeP() string {
	if o == nil || o.PrimeP == nil {
		var ret string
		return ret
	}
	return *o.PrimeP
}

// GetPrimePOk returns a tuple with the PrimeP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateKeyKey) GetPrimePOk() (*string, bool) {
	if o == nil || o.PrimeP == nil {
		return nil, false
	}
	return o.PrimeP, true
}

// HasPrimeP returns a boolean if a field has been set.
func (o *PrivateKeyKey) HasPrimeP() bool {
	if o != nil && o.PrimeP != nil {
		return true
	}

	return false
}

// SetPrimeP gets a reference to the given string and assigns it to the PrimeP field.
func (o *PrivateKeyKey) SetPrimeP(v string) {
	o.PrimeP = &v
}

// GetPrimeQ returns the PrimeQ field value if set, zero value otherwise.
func (o *PrivateKeyKey) GetPrimeQ() string {
	if o == nil || o.PrimeQ == nil {
		var ret string
		return ret
	}
	return *o.PrimeQ
}

// GetPrimeQOk returns a tuple with the PrimeQ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateKeyKey) GetPrimeQOk() (*string, bool) {
	if o == nil || o.PrimeQ == nil {
		return nil, false
	}
	return o.PrimeQ, true
}

// HasPrimeQ returns a boolean if a field has been set.
func (o *PrivateKeyKey) HasPrimeQ() bool {
	if o != nil && o.PrimeQ != nil {
		return true
	}

	return false
}

// SetPrimeQ gets a reference to the given string and assigns it to the PrimeQ field.
func (o *PrivateKeyKey) SetPrimeQ(v string) {
	o.PrimeQ = &v
}

// GetPublicExponent returns the PublicExponent field value if set, zero value otherwise.
func (o *PrivateKeyKey) GetPublicExponent() string {
	if o == nil || o.PublicExponent == nil {
		var ret string
		return ret
	}
	return *o.PublicExponent
}

// GetPublicExponentOk returns a tuple with the PublicExponent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateKeyKey) GetPublicExponentOk() (*string, bool) {
	if o == nil || o.PublicExponent == nil {
		return nil, false
	}
	return o.PublicExponent, true
}

// HasPublicExponent returns a boolean if a field has been set.
func (o *PrivateKeyKey) HasPublicExponent() bool {
	if o != nil && o.PublicExponent != nil {
		return true
	}

	return false
}

// SetPublicExponent gets a reference to the given string and assigns it to the PublicExponent field.
func (o *PrivateKeyKey) SetPublicExponent(v string) {
	o.PublicExponent = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PrivateKeyKey) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateKeyKey) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PrivateKeyKey) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *PrivateKeyKey) SetData(v string) {
	o.Data = &v
}

func (o PrivateKeyKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrimeP != nil {
		toSerialize["primeP"] = o.PrimeP
	}
	if o.PrimeQ != nil {
		toSerialize["primeQ"] = o.PrimeQ
	}
	if o.PublicExponent != nil {
		toSerialize["publicExponent"] = o.PublicExponent
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullablePrivateKeyKey struct {
	value *PrivateKeyKey
	isSet bool
}

func (v NullablePrivateKeyKey) Get() *PrivateKeyKey {
	return v.value
}

func (v *NullablePrivateKeyKey) Set(val *PrivateKeyKey) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateKeyKey) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateKeyKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateKeyKey(val *PrivateKeyKey) *NullablePrivateKeyKey {
	return &NullablePrivateKeyKey{value: val, isSet: true}
}

func (v NullablePrivateKeyKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateKeyKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


