/*
 * NetHSM
 *
 * All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All <a href=\"https://tools.ietf.org/html/rfc4648#section-4\">base64</a> encoded values are Big Endian.
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ProvisionRequestData struct for ProvisionRequestData
type ProvisionRequestData struct {
	UnlockPassphrase string `json:"unlockPassphrase"`
	AdminPassphrase string `json:"adminPassphrase"`
	SystemTime time.Time `json:"systemTime"`
}

// NewProvisionRequestData instantiates a new ProvisionRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionRequestData(unlockPassphrase string, adminPassphrase string, systemTime time.Time, ) *ProvisionRequestData {
	this := ProvisionRequestData{}
	this.UnlockPassphrase = unlockPassphrase
	this.AdminPassphrase = adminPassphrase
	this.SystemTime = systemTime
	return &this
}

// NewProvisionRequestDataWithDefaults instantiates a new ProvisionRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionRequestDataWithDefaults() *ProvisionRequestData {
	this := ProvisionRequestData{}
	return &this
}

// GetUnlockPassphrase returns the UnlockPassphrase field value
func (o *ProvisionRequestData) GetUnlockPassphrase() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UnlockPassphrase
}

// GetUnlockPassphraseOk returns a tuple with the UnlockPassphrase field value
// and a boolean to check if the value has been set.
func (o *ProvisionRequestData) GetUnlockPassphraseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UnlockPassphrase, true
}

// SetUnlockPassphrase sets field value
func (o *ProvisionRequestData) SetUnlockPassphrase(v string) {
	o.UnlockPassphrase = v
}

// GetAdminPassphrase returns the AdminPassphrase field value
func (o *ProvisionRequestData) GetAdminPassphrase() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AdminPassphrase
}

// GetAdminPassphraseOk returns a tuple with the AdminPassphrase field value
// and a boolean to check if the value has been set.
func (o *ProvisionRequestData) GetAdminPassphraseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AdminPassphrase, true
}

// SetAdminPassphrase sets field value
func (o *ProvisionRequestData) SetAdminPassphrase(v string) {
	o.AdminPassphrase = v
}

// GetSystemTime returns the SystemTime field value
func (o *ProvisionRequestData) GetSystemTime() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.SystemTime
}

// GetSystemTimeOk returns a tuple with the SystemTime field value
// and a boolean to check if the value has been set.
func (o *ProvisionRequestData) GetSystemTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SystemTime, true
}

// SetSystemTime sets field value
func (o *ProvisionRequestData) SetSystemTime(v time.Time) {
	o.SystemTime = v
}

func (o ProvisionRequestData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["unlockPassphrase"] = o.UnlockPassphrase
	}
	if true {
		toSerialize["adminPassphrase"] = o.AdminPassphrase
	}
	if true {
		toSerialize["systemTime"] = o.SystemTime
	}
	return json.Marshal(toSerialize)
}

type NullableProvisionRequestData struct {
	value *ProvisionRequestData
	isSet bool
}

func (v NullableProvisionRequestData) Get() *ProvisionRequestData {
	return v.value
}

func (v *NullableProvisionRequestData) Set(val *ProvisionRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionRequestData(val *ProvisionRequestData) *NullableProvisionRequestData {
	return &NullableProvisionRequestData{value: val, isSet: true}
}

func (v NullableProvisionRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


