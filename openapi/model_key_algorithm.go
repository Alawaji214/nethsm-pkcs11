/*
 * NitroHSM
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// KeyAlgorithm the model 'KeyAlgorithm'
type KeyAlgorithm string

// List of KeyAlgorithm
const (
	RSA KeyAlgorithm = "RSA"
	ED25519 KeyAlgorithm = "ED25519"
)

func (v *KeyAlgorithm) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := KeyAlgorithm(value)
	for _, existing := range []KeyAlgorithm{ "RSA", "ED25519",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid KeyAlgorithm", value)
}

// Ptr returns reference to KeyAlgorithm value
func (v KeyAlgorithm) Ptr() *KeyAlgorithm {
	return &v
}

type NullableKeyAlgorithm struct {
	value *KeyAlgorithm
	isSet bool
}

func (v NullableKeyAlgorithm) Get() *KeyAlgorithm {
	return v.value
}

func (v *NullableKeyAlgorithm) Set(val *KeyAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyAlgorithm(val *KeyAlgorithm) *NullableKeyAlgorithm {
	return &NullableKeyAlgorithm{value: val, isSet: true}
}

func (v NullableKeyAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

